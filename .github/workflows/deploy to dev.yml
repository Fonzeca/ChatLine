name: Deploy to dev
on:
  push:
    branches:
      - "dev"
  workflow_dispatch:
jobs:
  build:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - name: Clone repo
        uses: appleboy/ssh-action@master
        continue-on-error: true
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.PARENT_PATH }}
            git clone https://github.com/Fonzeca/ChatLine
      - name: Actualizar repo
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.PATH }}
            git fetch --all && git reset --hard origin/dev
      - name: Stop running container
        uses: appleboy/ssh-action@master
        continue-on-error: true
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script_stop: false
          script: |
            cd ${{ secrets.PATH }}
            docker compose stop chatline
            docker compose rm -f
      - name: Build docker image
        uses: appleboy/ssh-action@master
        continue-on-error: false
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.PATH }}
            docker compose build chatline
      - name: Run docker compose
        uses: appleboy/ssh-action@master
        continue-on-error: false
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ${{ secrets.PATH }}
            docker compose up -d
      - name: Discord notification
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}